{"version":3,"file":"index.modern.js","sources":["../src/utils/generateRainbow.js","../src/components/BarChart.js","../src/components/ExpensesTable.js","../src/components/PieChart.js","../src/index.js"],"sourcesContent":["/**\n * Helpers to generate a Rainbow between a number of step\n * @param numOfSteps\n * @param step\n * @returns {string}\n */\nexport default (numOfSteps, step) => {\n  let r, g, b\n  const h = step / numOfSteps\n  const i = ~~(h * 6)\n  const f = h * 6 - i\n  const q = 1 - f\n  switch (i % 6) {\n    case 0:\n      r = 1\n      g = f\n      b = 0\n      break\n    case 1:\n      r = q\n      g = 1\n      b = 0\n      break\n    case 2:\n      r = 0\n      g = 1\n      b = f\n      break\n    case 3:\n      r = 0\n      g = q\n      b = 1\n      break\n    case 4:\n      r = f\n      g = 0\n      b = 1\n      break\n    case 5:\n      r = 1\n      g = 0\n      b = q\n      break\n  }\n  return `#${`00${(~~(r * 255)).toString(16)}`.slice(-2)}${`00${(~~(\n    g * 255\n  )).toString(16)}`.slice(-2)}${`00${(~~(b * 255)).toString(16)}`.slice(-2)}`\n}\n","import React from 'react'\nimport { orderBy } from 'lodash'\nimport moment from 'moment'\nimport generateRainbow from '../utils/generateRainbow'\nimport { Bar } from 'react-chartjs-2'\n\nconst BarChart = ({ expenses, width, height }) => {\n  const periods = []\n  const cats = []\n\n  console.log('Count', expenses.length)\n\n  expenses = orderBy(expenses, (item) => item.createdAt)\n\n  expenses.map((item) => {\n    // eslint-disable-next-line new-cap\n    const month = new moment(item.createdAt).format('MM/YYYY')\n\n    let monthKey = periods.findIndex((i) => i === month)\n\n    if (monthKey === -1) {\n      monthKey = periods.push(month)\n      monthKey--\n    } else {\n    }\n\n    console.log('Month', monthKey)\n\n    let catKey = cats.findIndex((i) => i.label === item.tags[0])\n\n    if (catKey === -1) {\n      if (typeof item.tags[0] !== 'undefined') {\n        catKey = cats.push({\n          label: item.tags[0],\n          data: [],\n          backgroundColor: null,\n          borderColor: null,\n          borderWidth: 1,\n          stack: 'default'\n        })\n\n        catKey = catKey - 1\n      }\n    }\n\n    if (typeof cats[catKey] !== 'undefined') {\n      if (typeof cats[catKey].data[monthKey] === 'undefined') {\n        cats[catKey].data[monthKey] = 0\n      }\n\n      cats[catKey].data[monthKey] += item.amount / 100\n    }\n  })\n\n  cats.map((i, k) => {\n    cats[k].backgroundColor = generateRainbow(cats.length, k)\n    cats[k].borderColor = generateRainbow(cats.length, k)\n  })\n\n  const formattedData = {\n    labels: periods,\n    datasets: cats\n  }\n\n  return (\n    <Bar\n      data={formattedData}\n      options={{\n        maintainAspectRatio: true\n      }}\n    />\n  )\n}\n\nexport default BarChart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nconst ExpensesTable = ({ expenses, width, height }) => {\n  const rows = expenses\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='left'>Description</TableCell>\n            <TableCell align='left'>Amount</TableCell>\n            <TableCell align='right'>Status</TableCell>\n            <TableCell align='right'>Tags</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component='th' scope='row'>\n                {row.description}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align='right'>\n                {row.amount / 100} {row.currency}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align='right'>\n                {row.status}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align='right'>\n                {row.tags}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default ExpensesTable\n","import React from 'react'\nimport { orderBy } from 'lodash'\nimport generateRainbow from '../utils/generateRainbow'\nimport { Doughnut } from 'react-chartjs-2'\n\nconst PieChart = ({ expenses, width, height }) => {\n  const labels = []\n  const datasets = [\n    {\n      data: [],\n      backgroundColor: [],\n      hoverBackgroundColor: []\n    }\n  ]\n\n  expenses = orderBy(expenses, (item) => item.createdAt)\n\n  expenses.map((item) => {\n    // eslint-disable-next-line new-cap\n    const label = item.tags[0] ?? 'undefined'\n\n    let labelKey = labels.findIndex((i) => i === label)\n\n    if (labelKey === -1) {\n      labelKey = labels.push(label)\n      datasets[0].data[labelKey - 1] = item.amount / 100\n    } else {\n      datasets[0].data[labelKey] += item.amount / 100\n    }\n  })\n\n  labels.map((i, k) => {\n    datasets[0].backgroundColor[k] = generateRainbow(labels.length, k)\n    datasets[0].hoverBackgroundColor[k] = generateRainbow(labels.length, k)\n  })\n\n  const formattedData = {\n    labels: labels,\n    datasets: datasets\n  }\n\n  return (\n    <Doughnut\n      data={formattedData}\n      options={{\n        maintainAspectRatio: true\n      }}\n    />\n  )\n}\n\nexport default PieChart\n","import React, { useState } from 'react'\nimport styles from './styles.module.css'\nimport { useQuery, gql } from '@apollo/client'\nimport { IntlProvider, FormattedMessage } from 'react-intl'\nimport moment from 'moment'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport BarChart from './components/BarChart'\nimport ExpensesTable from './components/ExpensesTable'\nimport PieChart from './components/PieChart'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}))\n\nconst ALL_EXPENSES = gql`\n  query ExpensesPage(\n    $account: AccountReferenceInput!\n    $slug: String!\n    $offset: Int!\n    $dateFrom: ISODateTime!\n  ) {\n    expenses(\n      account: $account\n      orderBy: { field: CREATED_AT, direction: ASC }\n      offset: $offset\n      limit: 100\n      status: PAID\n      dateFrom: $dateFrom\n    ) {\n      offset\n      totalCount\n      limit\n      nodes {\n        id\n        amount\n        tags\n        description\n        currency\n        status\n        createdAt\n      }\n    }\n    account(slug: $slug) {\n      id\n      imageUrl\n      name\n    }\n  }\n`\n/**\n * Transparency page component\n * @param slug The account slug\n * @returns {JSX.Element}\n * @constructor\n */\nconst TransparencyPage = ({ slug, locale, messages, date }) => {\n  const classes = useStyles()\n  const [width] = useState(800)\n  const [height] = useState(300)\n  const offset = 0\n  const dateFrom = useState(date ?? '2001-01-01')\n  /**\n   * Get all expenses\n   */\n  const { loading, error, data, fetchMore } = useQuery(ALL_EXPENSES, {\n    variables: {\n      account: { slug: slug },\n      slug,\n      offset,\n      dateFrom\n    }\n  })\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  const account = data.account\n\n  const expenses = data.expenses.nodes\n\n  fetchMore({\n    variables: {\n      offset: data.expenses.nodes.length\n    },\n    updateQuery: (prev, { fetchMoreResult }) => {\n      if (!fetchMoreResult) return prev\n\n      fetchMoreResult.expenses.nodes = prev.expenses.nodes.concat(\n        fetchMoreResult.expenses.nodes\n      )\n\n      return Object.assign({}, fetchMoreResult)\n    }\n  }).then((res) => {\n    console.log('Res', res)\n  })\n\n  if (!messages) {\n    messages = {}\n  }\n\n  if (!locale) {\n    locale = 'en'\n  }\n\n  return (\n    <IntlProvider locale={locale} defaultLocale='en' messages={messages}>\n      <div className={styles.title}>\n        <h1 className='header'>\n          <img className={styles.header__logo} src={account.imageUrl} alt='' />\n          {account.name}\n        </h1>\n        <div className='content'>\n          <h2>\n            <FormattedMessage\n              id='allExpensesFrom'\n              defaultMessage='All expenses from {date}'\n              values={{\n                date: moment(dateFrom, 'YYYY-MM-DD').format('DD/MM/YYYY')\n              }}\n            />\n          </h2>\n          <Grid container className={classes.root} spacing={2}>\n            <Grid item xs={8}>\n              <BarChart expenses={expenses} width={width} height={height} />\n            </Grid>\n            <Grid item xs={4}>\n              <PieChart expenses={expenses} width={width} height={height} />\n            </Grid>\n          </Grid>\n          <ExpensesTable expenses={expenses} width={width} height={height} />\n        </div>\n      </div>\n    </IntlProvider>\n  )\n}\n\nexport default TransparencyPage\n"],"names":["numOfSteps","step","r","g","b","h","i","f","q","toString","slice","BarChart","expenses","width","height","periods","cats","console","log","length","orderBy","item","createdAt","map","month","moment","format","monthKey","findIndex","push","catKey","label","tags","data","backgroundColor","borderColor","borderWidth","stack","amount","k","generateRainbow","formattedData","labels","datasets","maintainAspectRatio","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","PropTypes","number","isRequired","func","ExpensesTable","rows","setPage","React","useState","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","min","Paper","row","id","description","currency","status","inputProps","native","PieChart","hoverBackgroundColor","labelKey","useStyles","flexGrow","paper","control","padding","ALL_EXPENSES","gql","TransparencyPage","slug","locale","messages","date","offset","dateFrom","loading","error","fetchMore","useQuery","variables","account","nodes","updateQuery","prev","fetchMoreResult","concat","Object","assign","then","res","styles","title","header__logo","imageUrl","name"],"mappings":"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"}