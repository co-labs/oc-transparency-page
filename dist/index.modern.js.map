{"version":3,"file":"index.modern.js","sources":["../src/utils/generateRainbow.js","../src/components/BarChart.js","../src/components/ExpensesTable.js","../src/components/PieChart.js","../src/index.js"],"sourcesContent":["/**\n * Helpers to generate a Rainbow between a number of step\n * @param numOfSteps\n * @param step\n * @returns {string}\n */\nexport default (numOfSteps, step) => {\n  let r, g, b\n  const h = step / numOfSteps\n  const i = ~~(h * 6)\n  const f = h * 6 - i\n  const q = 1 - f\n  switch (i % 6) {\n    case 0:\n      r = 1\n      g = f\n      b = 0\n      break\n    case 1:\n      r = q\n      g = 1\n      b = 0\n      break\n    case 2:\n      r = 0\n      g = 1\n      b = f\n      break\n    case 3:\n      r = 0\n      g = q\n      b = 1\n      break\n    case 4:\n      r = f\n      g = 0\n      b = 1\n      break\n    case 5:\n      r = 1\n      g = 0\n      b = q\n      break\n  }\n  return `#${`00${(~~(r * 255)).toString(16)}`.slice(-2)}${`00${(~~(\n    g * 255\n  )).toString(16)}`.slice(-2)}${`00${(~~(b * 255)).toString(16)}`.slice(-2)}`\n}\n","import React from 'react'\nimport { orderBy } from 'lodash'\nimport moment from 'moment'\nimport generateRainbow from '../utils/generateRainbow'\nimport { Bar } from 'react-chartjs-2'\n\n/**\n * BarChart formatter for expenses\n * @param expenses\n * @param width\n * @param height\n * @returns {JSX.Element}\n * @constructor\n */\nconst BarChart = ({ expenses, width, height }) => {\n  const periods = []\n  const cats = []\n\n  expenses = orderBy(expenses, (item) => item.createdAt)\n\n  expenses.map((item) => {\n    // eslint-disable-next-line new-cap\n    const month = new moment(item.createdAt).format('MM/YYYY')\n\n    let monthKey = periods.findIndex((i) => i === month)\n\n    if (monthKey === -1) {\n      monthKey = periods.push(month)\n      monthKey--\n    } else {\n    }\n\n    console.log('Month', monthKey)\n\n    let catKey = cats.findIndex((i) => i.label === item.tags[0])\n\n    if (catKey === -1) {\n      if (typeof item.tags[0] !== 'undefined') {\n        catKey = cats.push({\n          label: item.tags[0],\n          data: [],\n          backgroundColor: null,\n          borderColor: null,\n          borderWidth: 1,\n          stack: 'default'\n        })\n\n        catKey = catKey - 1\n      }\n    }\n\n    if (typeof cats[catKey] !== 'undefined') {\n      if (typeof cats[catKey].data[monthKey] === 'undefined') {\n        cats[catKey].data[monthKey] = 0\n      }\n\n      cats[catKey].data[monthKey] += item.amount / 100\n    }\n  })\n\n  cats.map((i, k) => {\n    cats[k].backgroundColor = generateRainbow(cats.length, k)\n    cats[k].borderColor = generateRainbow(cats.length, k)\n  })\n\n  const formattedData = {\n    labels: periods,\n    datasets: cats\n  }\n\n  return (\n    <Bar\n      data={formattedData}\n      options={{\n        responsive: true,\n        maintainAspectRatio: true,\n        aspectRatio: 2\n      }}\n    />\n  )\n}\n\nexport default BarChart\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableFooter from '@material-ui/core/TableFooter'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport Paper from '@material-ui/core/Paper'\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage'\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\nimport LastPageIcon from '@material-ui/icons/LastPage'\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1()\n  const theme = useTheme()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0)\n  }\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1)\n  }\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1))\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label='first page'\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label='previous page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowRight />\n        ) : (\n          <KeyboardArrowLeft />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='next page'\n      >\n        {theme.direction === 'rtl' ? (\n          <KeyboardArrowLeft />\n        ) : (\n          <KeyboardArrowRight />\n        )}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label='last page'\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\n/**\n * ExpensesTable formatter\n * @param expenses\n * @param width\n * @param height\n * @returns {JSX.Element}\n * @constructor\n */\nconst ExpensesTable = ({ expenses, width, height }) => {\n  const rows = expenses\n  const [page, setPage] = React.useState(0)\n  const [rowsPerPage, setRowsPerPage] = React.useState(5)\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage)\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label='simple table'>\n        <TableHead>\n          <TableRow>\n            <TableCell align='left'>Description</TableCell>\n            <TableCell align='left'>Amount</TableCell>\n            <TableCell align='right'>Status</TableCell>\n            <TableCell align='right'>Tags</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(rowsPerPage > 0\n            ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : rows\n          ).map((row) => (\n            <TableRow key={row.id}>\n              <TableCell component='th' scope='row'>\n                {row.description}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align='right'>\n                {row.amount / 100} {row.currency}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align='right'>\n                {row.status}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align='right'>\n                {row.tags}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={rows.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default ExpensesTable\n","import React from 'react'\nimport { orderBy } from 'lodash'\nimport generateRainbow from '../utils/generateRainbow'\nimport { Doughnut } from 'react-chartjs-2'\n\n/**\n * Format a PieChart with the OpenCollective expenses data\n * @param expenses\n * @param width\n * @param height\n * @returns {JSX.Element}\n * @constructor\n */\nconst PieChart = ({ expenses, width, height }) => {\n  const labels = []\n  const datasets = [\n    {\n      data: [],\n      backgroundColor: [],\n      hoverBackgroundColor: []\n    }\n  ]\n\n  expenses = orderBy(expenses, (item) => item.createdAt)\n\n  expenses.map((item) => {\n    // eslint-disable-next-line new-cap\n    const label = item.tags[0] ?? 'undefined'\n\n    let labelKey = labels.findIndex((i) => i === label)\n\n    if (labelKey === -1) {\n      labelKey = labels.push(label)\n      datasets[0].data[labelKey - 1] = item.amount / 100\n    } else {\n      datasets[0].data[labelKey] += item.amount / 100\n    }\n  })\n\n  labels.map((i, k) => {\n    datasets[0].backgroundColor[k] = generateRainbow(labels.length, k)\n    datasets[0].hoverBackgroundColor[k] = generateRainbow(labels.length, k)\n  })\n\n  const formattedData = {\n    labels: labels,\n    datasets: datasets\n  }\n\n  return (\n    <Doughnut\n      data={formattedData}\n      options={{\n        maintainAspectRatio: true,\n        aspectRatio: 1,\n        responsive: true\n      }}\n    />\n  )\n}\n\nexport default PieChart\n","import React, { useState } from 'react'\nimport styles from './styles.module.css'\nimport { useQuery, gql } from '@apollo/client'\nimport { IntlProvider } from 'react-intl'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Grid from '@material-ui/core/Grid'\nimport BarChart from './components/BarChart'\nimport ExpensesTable from './components/ExpensesTable'\nimport PieChart from './components/PieChart'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    height: 140,\n    width: 100\n  },\n  control: {\n    padding: theme.spacing(2)\n  }\n}))\n\nconst ALL_EXPENSES = gql`\n  query ExpensesPage(\n    $account: AccountReferenceInput!\n    $slug: String!\n    $offset: Int!\n    $dateFrom: ISODateTime!\n  ) {\n    expenses(\n      account: $account\n      orderBy: { field: CREATED_AT, direction: ASC }\n      offset: $offset\n      limit: 100\n      status: PAID\n      dateFrom: $dateFrom\n    ) {\n      offset\n      totalCount\n      limit\n      nodes {\n        id\n        amount\n        tags\n        description\n        currency\n        status\n        createdAt\n      }\n    }\n    account(slug: $slug) {\n      id\n      imageUrl\n      name\n    }\n  }\n`\n/**\n * Transparency page component\n * @param slug The account slug\n * @returns {JSX.Element}\n * @constructor\n */\nconst TransparencyPage = ({ slug, locale, messages, date }) => {\n  const classes = useStyles()\n  const [width] = useState(800)\n  const [height] = useState(300)\n  const offset = 0\n  const dateFrom = useState(date ?? '2001-01-01')\n  /**\n   * Get all expenses\n   */\n  const { loading, error, data, fetchMore } = useQuery(ALL_EXPENSES, {\n    variables: {\n      account: { slug: slug },\n      slug,\n      offset,\n      dateFrom\n    }\n  })\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  const account = data.account\n\n  const expenses = data.expenses.nodes\n\n  fetchMore({\n    variables: {\n      offset: data.expenses.nodes.length\n    },\n    updateQuery: (prev, { fetchMoreResult }) => {\n      if (!fetchMoreResult) return prev\n\n      fetchMoreResult.expenses.nodes = prev.expenses.nodes.concat(\n        fetchMoreResult.expenses.nodes\n      )\n\n      return Object.assign({}, fetchMoreResult)\n    }\n  }).then((res) => {\n    console.log('Res', res)\n  })\n\n  if (!messages) {\n    messages = {}\n  }\n\n  if (!locale) {\n    locale = 'en'\n  }\n\n  return (\n    <IntlProvider locale={locale} defaultLocale='en' messages={messages}>\n      <div className={styles.container}>\n        <div className='logo'>\n          <img className={styles.header__logo} src={account.imageUrl} alt='' />\n        </div>\n        <h1 className='title'>{account.name}</h1>\n        <div className='content' style={{ position: 'relative' }}>\n          {/* <h2>\n            <FormattedMessage\n              id='allExpensesFrom'\n              defaultMessage='All expenses from {date}'\n              values={{\n                date: moment(dateFrom, 'YYYY-MM-DD').format('DD/MM/YYYY')\n              }}\n            />\n          </h2> */}\n          <Grid container className={classes.root} spacing={2}>\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={8}\n              lg={8}\n              style={{ position: 'relative', minHeight: 100, minWidth: 500 }}\n            >\n              <BarChart expenses={expenses} />\n            </Grid>\n            <Grid\n              item\n              xs={12}\n              sm={12}\n              md={4}\n              lg={4}\n              style={{ position: 'relative', minHeight: 500, minWidth: 500 }}\n            >\n              <PieChart expenses={expenses} />\n            </Grid>\n          </Grid>\n          <ExpensesTable expenses={expenses} width={width} height={height} />\n        </div>\n      </div>\n    </IntlProvider>\n  )\n}\n\nexport * from './components/BarChart'\nexport * from './components/PieChart'\nexport * from './components/ExpensesTable'\n\nexport default TransparencyPage\n"],"names":["numOfSteps","step","r","g","b","h","i","f","q","toString","slice","BarChart","expenses","periods","cats","orderBy","item","createdAt","map","month","moment","format","monthKey","findIndex","push","console","log","catKey","label","tags","data","backgroundColor","borderColor","borderWidth","stack","amount","k","generateRainbow","length","formattedData","labels","datasets","responsive","maintainAspectRatio","aspectRatio","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","propTypes","PropTypes","number","isRequired","func","ExpensesTable","rows","React","useState","setPage","setRowsPerPage","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","min","Paper","row","id","description","width","currency","status","height","inputProps","PieChart","hoverBackgroundColor","labelKey","useStyles","flexGrow","paper","control","padding","ALL_EXPENSES","gql","TransparencyPage","slug","locale","messages","date","offset","dateFrom","useQuery","variables","account","loading","error","fetchMore","nodes","updateQuery","prev","fetchMoreResult","concat","Object","assign","then","res","styles","container","header__logo","imageUrl","name","position","minHeight","minWidth"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,uBAAe,UAACA,UAAD,EAAaC,IAAb,EAAsB;AACnC,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,CAAV;AACA,MAAMC,CAAC,GAAGJ,IAAI,GAAGD,UAAjB;AACA,MAAMM,CAAC,GAAG,CAAC,EAAED,CAAC,GAAG,CAAN,CAAX;AACA,MAAME,CAAC,GAAGF,CAAC,GAAG,CAAJ,GAAQC,CAAlB;AACA,MAAME,CAAC,GAAG,IAAID,CAAd;;AACA,UAAQD,CAAC,GAAG,CAAZ;AACE,SAAK,CAAL;AACEJ,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAGI,CAAJ;AACAH,MAAAA,CAAC,GAAG,CAAJ;AACA;;AACF,SAAK,CAAL;AACEF,MAAAA,CAAC,GAAGM,CAAJ;AACAL,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAG,CAAJ;AACA;;AACF,SAAK,CAAL;AACEF,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAGG,CAAJ;AACA;;AACF,SAAK,CAAL;AACEL,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAGK,CAAJ;AACAJ,MAAAA,CAAC,GAAG,CAAJ;AACA;;AACF,SAAK,CAAL;AACEF,MAAAA,CAAC,GAAGK,CAAJ;AACAJ,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAG,CAAJ;AACA;;AACF,SAAK,CAAL;AACEF,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAGI,CAAJ;AACA;AA9BJ;;AAgCA,eAAW,QAAK,CAAC,CAAC,EAAEN,CAAC,GAAG,GAAN,CAAF,EAAcO,QAAd,CAAuB,EAAvB,CAAL,EAAkCC,KAAlC,CAAwC,CAAC,CAAzC,CAAX,GAAyD,QAAK,CAAC,CAAC,EAC9DP,CAAC,GAAG,GAD0D,CAAF,EAE3DM,QAF2D,CAElD,EAFkD,CAAL,EAEvCC,KAFuC,CAEjC,CAAC,CAFgC,CAAzD,GAE8B,QAAK,CAAC,CAAC,EAAEN,CAAC,GAAG,GAAN,CAAF,EAAcK,QAAd,CAAuB,EAAvB,CAAL,EAAkCC,KAAlC,CAAwC,CAAC,CAAzC,CAF9B;AAGD,CAzCD;;ACQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAChD,MAAMC,OAAO,GAAG,EAAhB;AACA,MAAMC,IAAI,GAAG,EAAb;AAEAF,EAAAA,QAAQ,GAAGG,OAAO,CAACH,QAAD,EAAW,UAACI,IAAD;AAAA,WAAUA,IAAI,CAACC,SAAf;AAAA,GAAX,CAAlB;AAEAL,EAAAA,QAAQ,CAACM,GAAT,CAAa,UAACF,IAAD,EAAU;AAErB,QAAMG,KAAK,GAAG,IAAIC,MAAJ,CAAWJ,IAAI,CAACC,SAAhB,EAA2BI,MAA3B,CAAkC,SAAlC,CAAd;AAEA,QAAIC,QAAQ,GAAGT,OAAO,CAACU,SAAR,CAAkB,UAACjB,CAAD;AAAA,aAAOA,CAAC,KAAKa,KAAb;AAAA,KAAlB,CAAf;;AAEA,QAAIG,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBA,MAAAA,QAAQ,GAAGT,OAAO,CAACW,IAAR,CAAaL,KAAb,CAAX;AACAG,MAAAA,QAAQ;AACT,KAHD;;AAMAG,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,QAArB;AAEA,QAAIK,MAAM,GAAGb,IAAI,CAACS,SAAL,CAAe,UAACjB,CAAD;AAAA,aAAOA,CAAC,CAACsB,KAAF,KAAYZ,IAAI,CAACa,IAAL,CAAU,CAAV,CAAnB;AAAA,KAAf,CAAb;;AAEA,QAAIF,MAAM,KAAK,CAAC,CAAhB,EAAmB;AACjB,UAAI,OAAOX,IAAI,CAACa,IAAL,CAAU,CAAV,CAAP,KAAwB,WAA5B,EAAyC;AACvCF,QAAAA,MAAM,GAAGb,IAAI,CAACU,IAAL,CAAU;AACjBI,UAAAA,KAAK,EAAEZ,IAAI,CAACa,IAAL,CAAU,CAAV,CADU;AAEjBC,UAAAA,IAAI,EAAE,EAFW;AAGjBC,UAAAA,eAAe,EAAE,IAHA;AAIjBC,UAAAA,WAAW,EAAE,IAJI;AAKjBC,UAAAA,WAAW,EAAE,CALI;AAMjBC,UAAAA,KAAK,EAAE;AANU,SAAV,CAAT;AASAP,QAAAA,MAAM,GAAGA,MAAM,GAAG,CAAlB;AACD;AACF;;AAED,QAAI,OAAOb,IAAI,CAACa,MAAD,CAAX,KAAwB,WAA5B,EAAyC;AACvC,UAAI,OAAOb,IAAI,CAACa,MAAD,CAAJ,CAAaG,IAAb,CAAkBR,QAAlB,CAAP,KAAuC,WAA3C,EAAwD;AACtDR,QAAAA,IAAI,CAACa,MAAD,CAAJ,CAAaG,IAAb,CAAkBR,QAAlB,IAA8B,CAA9B;AACD;;AAEDR,MAAAA,IAAI,CAACa,MAAD,CAAJ,CAAaG,IAAb,CAAkBR,QAAlB,KAA+BN,IAAI,CAACmB,MAAL,GAAc,GAA7C;AACD;AACF,GAtCD;AAwCArB,EAAAA,IAAI,CAACI,GAAL,CAAS,UAACZ,CAAD,EAAI8B,CAAJ,EAAU;AACjBtB,IAAAA,IAAI,CAACsB,CAAD,CAAJ,CAAQL,eAAR,GAA0BM,eAAe,CAACvB,IAAI,CAACwB,MAAN,EAAcF,CAAd,CAAzC;AACAtB,IAAAA,IAAI,CAACsB,CAAD,CAAJ,CAAQJ,WAAR,GAAsBK,eAAe,CAACvB,IAAI,CAACwB,MAAN,EAAcF,CAAd,CAArC;AACD,GAHD;AAKA,MAAMG,aAAa,GAAG;AACpBC,IAAAA,MAAM,EAAE3B,OADY;AAEpB4B,IAAAA,QAAQ,EAAE3B;AAFU,GAAtB;AAKA,sBACE,oBAAC,GAAD;AACE,IAAA,IAAI,EAAEyB,aADR;AAEE,IAAA,OAAO,EAAE;AACPG,MAAAA,UAAU,EAAE,IADL;AAEPC,MAAAA,mBAAmB,EAAE,IAFd;AAGPC,MAAAA,WAAW,EAAE;AAHN;AAFX,IADF;AAUD,CAlED;;ACIA,IAAMC,UAAU,GAAGC,UAAU,CAAC,UAACC,KAAD;AAAA,SAAY;AACxCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,UAAU,EAAE,CADR;AAEJC,MAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,GAAd;AAFR;AADkC,GAAZ;AAAA,CAAD,CAA7B;;AAOA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AACrC,MAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,MAAME,KAAK,GAAGQ,QAAQ,EAAtB;AAFqC,MAG7BC,KAH6B,GAGcH,KAHd,CAG7BG,KAH6B;AAAA,MAGtBC,IAHsB,GAGcJ,KAHd,CAGtBI,IAHsB;AAAA,MAGhBC,WAHgB,GAGcL,KAHd,CAGhBK,WAHgB;AAAA,MAGHC,YAHG,GAGcN,KAHd,CAGHM,YAHG;;AAKrC,MAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,KAAD,EAAW;AAC5CF,IAAAA,YAAY,CAACE,KAAD,EAAQ,CAAR,CAAZ;AACD,GAFD;;AAIA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACD,KAAD,EAAW;AACvCF,IAAAA,YAAY,CAACE,KAAD,EAAQJ,IAAI,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,MAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACF,KAAD,EAAW;AACvCF,IAAAA,YAAY,CAACE,KAAD,EAAQJ,IAAI,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,MAAMO,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACH,KAAD,EAAW;AAC3CF,IAAAA,YAAY,CAACE,KAAD,EAAQI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYD,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAA7C,CAAR,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACN;AAAxB,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEY,0BADX;AAEE,IAAA,QAAQ,EAAEH,IAAI,KAAK,CAFrB;AAGE,kBAAW;AAHb,KAKGV,KAAK,CAACqB,SAAN,KAAoB,KAApB,gBAA4B,oBAAC,YAAD,OAA5B,gBAA+C,oBAAC,aAAD,OALlD,CADF,eAQE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEN,qBADX;AAEE,IAAA,QAAQ,EAAEL,IAAI,KAAK,CAFrB;AAGE,kBAAW;AAHb,KAKGV,KAAK,CAACqB,SAAN,KAAoB,KAApB,gBACC,oBAAC,kBAAD,OADD,gBAGC,oBAAC,iBAAD,OARJ,CARF,eAmBE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEL,qBADX;AAEE,IAAA,QAAQ,EAAEN,IAAI,IAAIQ,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAFrD;AAGE,kBAAW;AAHb,KAKGX,KAAK,CAACqB,SAAN,KAAoB,KAApB,gBACC,oBAAC,iBAAD,OADD,gBAGC,oBAAC,kBAAD,OARJ,CAnBF,eA8BE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAEJ,yBADX;AAEE,IAAA,QAAQ,EAAEP,IAAI,IAAIQ,IAAI,CAACE,IAAL,CAAUX,KAAK,GAAGE,WAAlB,IAAiC,CAFrD;AAGE,kBAAW;AAHb,KAKGX,KAAK,CAACqB,SAAN,KAAoB,KAApB,gBAA4B,oBAAC,aAAD,OAA5B,gBAAgD,oBAAC,YAAD,OALnD,CA9BF,CADF;AAwCD;;AAEDhB,sBAAsB,CAACiB,SAAvB,GAAmC;AACjCb,EAAAA,KAAK,EAAEc,SAAS,CAACC,MAAV,CAAiBC,UADS;AAEjCb,EAAAA,YAAY,EAAEW,SAAS,CAACG,IAAV,CAAeD,UAFI;AAGjCf,EAAAA,IAAI,EAAEa,SAAS,CAACC,MAAV,CAAiBC,UAHU;AAIjCd,EAAAA,WAAW,EAAEY,SAAS,CAACC,MAAV,CAAiBC;AAJG,CAAnC;;AAeA,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAAiC;AAAA,MAA9B9D,QAA8B,QAA9BA,QAA8B;AACrD,MAAM+D,IAAI,GAAG/D,QAAb;;AADqD,wBAE7BgE,KAAK,CAACC,QAAN,CAAe,CAAf,CAF6B;AAAA,MAE9CpB,IAF8C;AAAA,MAExCqB,OAFwC;;AAAA,yBAGfF,KAAK,CAACC,QAAN,CAAe,CAAf,CAHe;AAAA,MAG9CnB,WAH8C;AAAA,MAGjCqB,cAHiC;;AAKrD,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACnB,KAAD,EAAQoB,OAAR,EAAoB;AAC3CH,IAAAA,OAAO,CAACG,OAAD,CAAP;AACD,GAFD;;AAIA,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACrB,KAAD,EAAW;AACzCkB,IAAAA,cAAc,CAACI,QAAQ,CAACtB,KAAK,CAACuB,MAAN,CAAaC,KAAd,EAAqB,EAArB,CAAT,CAAd;AACAP,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAKA,MAAMQ,SAAS,GACb5B,WAAW,GAAGO,IAAI,CAACsB,GAAL,CAAS7B,WAAT,EAAsBiB,IAAI,CAACrC,MAAL,GAAcmB,IAAI,GAAGC,WAA3C,CADhB;AAGA,sBACE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAE8B;AAA3B,kBACE,oBAAC,KAAD;AAAO,kBAAW;AAAlB,kBACE,oBAAC,SAAD,qBACE,oBAAC,QAAD,qBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,mBADF,eAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,cAFF,eAGE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,cAHF,eAIE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,YAJF,CADF,CADF,eASE,oBAAC,SAAD,QACG,CAAC9B,WAAW,GAAG,CAAd,GACEiB,IAAI,CAACjE,KAAL,CAAW+C,IAAI,GAAGC,WAAlB,EAA+BD,IAAI,GAAGC,WAAP,GAAqBA,WAApD,CADF,GAEEiB,IAFH,EAGCzD,GAHD,CAGK,UAACuE,GAAD;AAAA,wBACJ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACC;AAAnB,oBACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,IAArB;AAA0B,MAAA,KAAK,EAAC;AAAhC,OACGD,GAAG,CAACE,WADP,CADF,eAIE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAlB;AAAkC,MAAA,KAAK,EAAC;AAAxC,OACGH,GAAG,CAACtD,MAAJ,GAAa,GADhB,OACsBsD,GAAG,CAACI,QAD1B,CAJF,eAOE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAlB;AAAkC,MAAA,KAAK,EAAC;AAAxC,OACGH,GAAG,CAACK,MADP,CAPF,eAUE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAlB;AAAkC,MAAA,KAAK,EAAC;AAAxC,OACGH,GAAG,CAAC5D,IADP,CAVF,CADI;AAAA,GAHL,CADH,EAqBGyD,SAAS,GAAG,CAAZ,iBACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE,KAAKT;AAAf;AAAjB,kBACE,oBAAC,SAAD;AAAW,IAAA,OAAO,EAAE;AAApB,IADF,CAtBJ,CATF,eAoCE,oBAAC,WAAD,qBACE,oBAAC,QAAD,qBACE,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY;AAAE1D,MAAAA,KAAK,EAAE,KAAT;AAAgByD,MAAAA,KAAK,EAAE,CAAC;AAAxB,KAAZ,CADtB;AAEE,IAAA,OAAO,EAAE,CAFX;AAGE,IAAA,KAAK,EAAEV,IAAI,CAACrC,MAHd;AAIE,IAAA,WAAW,EAAEoB,WAJf;AAKE,IAAA,IAAI,EAAED,IALR;AAME,IAAA,WAAW,EAAE;AACXuC,MAAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OADD;AAEX,gBAAQ;AAFG,KANf;AAUE,IAAA,YAAY,EAAEhB,gBAVhB;AAWE,IAAA,mBAAmB,EAAEE,uBAXvB;AAYE,IAAA,gBAAgB,EAAE9B;AAZpB,IADF,CADF,CApCF,CADF,CADF;AA2DD,CA5ED;;AC1FA,IAAM6C,QAAQ,GAAG,SAAXA,QAAW,OAAiC;AAAA,MAA9BrF,QAA8B,QAA9BA,QAA8B;AAChD,MAAM4B,MAAM,GAAG,EAAf;AACA,MAAMC,QAAQ,GAAG,CACf;AACEX,IAAAA,IAAI,EAAE,EADR;AAEEC,IAAAA,eAAe,EAAE,EAFnB;AAGEmE,IAAAA,oBAAoB,EAAE;AAHxB,GADe,CAAjB;AAQAtF,EAAAA,QAAQ,GAAGG,OAAO,CAACH,QAAD,EAAW,UAACI,IAAD;AAAA,WAAUA,IAAI,CAACC,SAAf;AAAA,GAAX,CAAlB;AAEAL,EAAAA,QAAQ,CAACM,GAAT,CAAa,UAACF,IAAD,EAAU;AAAA;;AAErB,QAAMY,KAAK,kBAAGZ,IAAI,CAACa,IAAL,CAAU,CAAV,CAAH,0BAAmB,WAA9B;AAEA,QAAIsE,QAAQ,GAAG3D,MAAM,CAACjB,SAAP,CAAiB,UAACjB,CAAD;AAAA,aAAOA,CAAC,KAAKsB,KAAb;AAAA,KAAjB,CAAf;;AAEA,QAAIuE,QAAQ,KAAK,CAAC,CAAlB,EAAqB;AACnBA,MAAAA,QAAQ,GAAG3D,MAAM,CAAChB,IAAP,CAAYI,KAAZ,CAAX;AACAa,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYX,IAAZ,CAAiBqE,QAAQ,GAAG,CAA5B,IAAiCnF,IAAI,CAACmB,MAAL,GAAc,GAA/C;AACD,KAHD,MAGO;AACLM,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYX,IAAZ,CAAiBqE,QAAjB,KAA8BnF,IAAI,CAACmB,MAAL,GAAc,GAA5C;AACD;AACF,GAZD;AAcAK,EAAAA,MAAM,CAACtB,GAAP,CAAW,UAACZ,CAAD,EAAI8B,CAAJ,EAAU;AACnBK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYV,eAAZ,CAA4BK,CAA5B,IAAiCC,eAAe,CAACG,MAAM,CAACF,MAAR,EAAgBF,CAAhB,CAAhD;AACAK,IAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYyD,oBAAZ,CAAiC9D,CAAjC,IAAsCC,eAAe,CAACG,MAAM,CAACF,MAAR,EAAgBF,CAAhB,CAArD;AACD,GAHD;AAKA,MAAMG,aAAa,GAAG;AACpBC,IAAAA,MAAM,EAAEA,MADY;AAEpBC,IAAAA,QAAQ,EAAEA;AAFU,GAAtB;AAKA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAEF,aADR;AAEE,IAAA,OAAO,EAAE;AACPI,MAAAA,mBAAmB,EAAE,IADd;AAEPC,MAAAA,WAAW,EAAE,CAFN;AAGPF,MAAAA,UAAU,EAAE;AAHL;AAFX,IADF;AAUD,CA9CD;;;;;;;;;;;ACHA,IAAM0D,SAAS,GAAGtD,UAAU,CAAC,UAACC,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJqD,MAAAA,QAAQ,EAAE;AADN,KADiC;AAIvCC,IAAAA,KAAK,EAAE;AACLP,MAAAA,MAAM,EAAE,GADH;AAELH,MAAAA,KAAK,EAAE;AAFF,KAJgC;AAQvCW,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAEzD,KAAK,CAACI,OAAN,CAAc,CAAd;AADF;AAR8B,GAAZ;AAAA,CAAD,CAA5B;AAaA,IAAMsD,YAAY,GAAGC,GAAH,mBAAlB;;AAyCA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAsC;AAAA,MAAnCC,IAAmC,QAAnCA,IAAmC;AAAA,MAA7BC,MAA6B,QAA7BA,MAA6B;AAAA,MAArBC,QAAqB,QAArBA,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC7D,MAAMzD,OAAO,GAAG8C,SAAS,EAAzB;;AAD6D,kBAE7CvB,QAAQ,CAAC,GAAD,CAFqC;AAAA,MAEtDe,KAFsD;;AAAA,mBAG5Cf,QAAQ,CAAC,GAAD,CAHoC;AAAA,MAGtDkB,MAHsD;;AAI7D,MAAMiB,MAAM,GAAG,CAAf;AACA,MAAMC,QAAQ,GAAGpC,QAAQ,CAACkC,IAAD,WAACA,IAAD,GAAS,YAAT,CAAzB;;AAL6D,kBASjBG,QAAQ,CAACT,YAAD,EAAe;AACjEU,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE;AAAER,QAAAA,IAAI,EAAEA;AAAR,OADA;AAETA,MAAAA,IAAI,EAAJA,IAFS;AAGTI,MAAAA,MAAM,EAANA,MAHS;AAITC,MAAAA,QAAQ,EAARA;AAJS;AADsD,GAAf,CATS;AAAA,MASrDI,OATqD,aASrDA,OATqD;AAAA,MAS5CC,KAT4C,aAS5CA,KAT4C;AAAA,MASrCxF,IATqC,aASrCA,IATqC;AAAA,MAS/ByF,SAT+B,aAS/BA,SAT+B;;AAiB7D,MAAIF,OAAJ,EAAa,oBAAO,4CAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO,0CAAP;AAEX,MAAMF,OAAO,GAAGtF,IAAI,CAACsF,OAArB;AAEA,MAAMxG,QAAQ,GAAGkB,IAAI,CAAClB,QAAL,CAAc4G,KAA/B;AAEAD,EAAAA,SAAS,CAAC;AACRJ,IAAAA,SAAS,EAAE;AACTH,MAAAA,MAAM,EAAElF,IAAI,CAAClB,QAAL,CAAc4G,KAAd,CAAoBlF;AADnB,KADH;AAIRmF,IAAAA,WAAW,EAAE,qBAACC,IAAD,SAA+B;AAAA,UAAtBC,eAAsB,SAAtBA,eAAsB;AAC1C,UAAI,CAACA,eAAL,EAAsB,OAAOD,IAAP;AAEtBC,MAAAA,eAAe,CAAC/G,QAAhB,CAAyB4G,KAAzB,GAAiCE,IAAI,CAAC9G,QAAL,CAAc4G,KAAd,CAAoBI,MAApB,CAC/BD,eAAe,CAAC/G,QAAhB,CAAyB4G,KADM,CAAjC;AAIA,aAAOK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,eAAlB,CAAP;AACD;AAZO,GAAD,CAAT,CAaGI,IAbH,CAaQ,UAACC,GAAD,EAAS;AACfvG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBsG,GAAnB;AACD,GAfD;;AAiBA,MAAI,CAAClB,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAG,EAAX;AACD;;AAED,MAAI,CAACD,MAAL,EAAa;AACXA,IAAAA,MAAM,GAAG,IAAT;AACD;;AAED,sBACE,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAA8B,IAAA,aAAa,EAAC,IAA5C;AAAiD,IAAA,QAAQ,EAAEC;AAA3D,kBACE;AAAK,IAAA,SAAS,EAAEmB,MAAM,CAACC;AAAvB,kBACE;AAAK,IAAA,SAAS,EAAC;AAAf,kBACE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACE,YAAvB;AAAqC,IAAA,GAAG,EAAEf,OAAO,CAACgB,QAAlD;AAA4D,IAAA,GAAG,EAAC;AAAhE,IADF,CADF,eAIE;AAAI,IAAA,SAAS,EAAC;AAAd,KAAuBhB,OAAO,CAACiB,IAA/B,CAJF,eAKE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ;AAAhC,kBAUE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAEhF,OAAO,CAACN,IAAnC;AAAyC,IAAA,OAAO,EAAE;AAAlD,kBACE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAME,IAAA,KAAK,EAAE;AAAEsF,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,SAAS,EAAE,GAAnC;AAAwCC,MAAAA,QAAQ,EAAE;AAAlD;AANT,kBAQE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE5H;AAApB,IARF,CADF,eAWE,oBAAC,IAAD;AACE,IAAA,IAAI,MADN;AAEE,IAAA,EAAE,EAAE,EAFN;AAGE,IAAA,EAAE,EAAE,EAHN;AAIE,IAAA,EAAE,EAAE,CAJN;AAKE,IAAA,EAAE,EAAE,CALN;AAME,IAAA,KAAK,EAAE;AAAE0H,MAAAA,QAAQ,EAAE,UAAZ;AAAwBC,MAAAA,SAAS,EAAE,GAAnC;AAAwCC,MAAAA,QAAQ,EAAE;AAAlD;AANT,kBAQE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAE5H;AAApB,IARF,CAXF,CAVF,eAgCE,oBAAC,aAAD;AAAe,IAAA,QAAQ,EAAEA,QAAzB;AAAmC,IAAA,KAAK,EAAEgF,KAA1C;AAAiD,IAAA,MAAM,EAAEG;AAAzD,IAhCF,CALF,CADF,CADF;AA4CD,CA7FD;;;;"}