{"version":3,"file":"index.modern.js","sources":["../src/utils/generateRainbow.js","../src/index.js"],"sourcesContent":["/**\n * Helpers to generate a Rainbow between a number of step\n * @param numOfSteps\n * @param step\n * @returns {string}\n */\nexport default (numOfSteps, step) => {\n  let r, g, b\n  const h = step / numOfSteps\n  const i = ~~(h * 6)\n  const f = h * 6 - i\n  const q = 1 - f\n  switch (i % 6) {\n    case 0:\n      r = 1\n      g = f\n      b = 0\n      break\n    case 1:\n      r = q\n      g = 1\n      b = 0\n      break\n    case 2:\n      r = 0\n      g = 1\n      b = f\n      break\n    case 3:\n      r = 0\n      g = q\n      b = 1\n      break\n    case 4:\n      r = f\n      g = 0\n      b = 1\n      break\n    case 5:\n      r = 1\n      g = 0\n      b = q\n      break\n  }\n  return `#${`00${(~~(r * 255)).toString(16)}`.slice(-2)}${`00${(~~(\n    g * 255\n  )).toString(16)}`.slice(-2)}${`00${(~~(b * 255)).toString(16)}`.slice(-2)}`\n}\n","import React, { useState } from 'react'\nimport styles from './styles.module.css'\nimport { useQuery, gql } from '@apollo/client'\nimport { Bar } from 'react-chartjs-2'\nimport { IntlProvider, FormattedMessage } from 'react-intl'\nimport moment from 'moment'\nimport { orderBy } from 'lodash'\nimport generateRainbow from './utils/generateRainbow'\n\nconst ALL_EXPENSES = gql`\n  query ExpensesPage(\n    $account: AccountReferenceInput!\n    $slug: String!\n    $offset: Int!\n    $dateFrom: ISODateTime!\n  ) {\n    expenses(\n      account: $account\n      orderBy: { field: CREATED_AT, direction: ASC }\n      offset: $offset\n      limit: 100\n      status: PAID\n      dateFrom: $dateFrom\n    ) {\n      offset\n      totalCount\n      limit\n      nodes {\n        id\n        amount\n        tags\n        description\n        currency\n        status\n        createdAt\n      }\n    }\n    account(slug: $slug) {\n      id\n      imageUrl\n      name\n    }\n  }\n`\n/**\n * Transparency page component\n * @param slug The account slug\n * @returns {JSX.Element}\n * @constructor\n */\nconst TransparencyPage = ({ slug, locale, messages, date }) => {\n  const [width] = useState(800)\n  const [height] = useState(300)\n  const offset = 0\n  const dateFrom = useState(date ?? '2001-01-01')\n  /**\n   * Get all expenses\n   */\n  const { loading, error, data, fetchMore } = useQuery(ALL_EXPENSES, {\n    variables: {\n      account: { slug: slug },\n      slug,\n      offset,\n      dateFrom\n    }\n  })\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error :(</p>\n\n  const account = data.account\n\n  let expenses = data.expenses.nodes\n\n  const periods = []\n  const cats = []\n\n  fetchMore({\n    variables: {\n      offset: data.expenses.nodes.length\n    },\n    updateQuery: (prev, { fetchMoreResult }) => {\n      if (!fetchMoreResult) return prev\n\n      fetchMoreResult.expenses.nodes = prev.expenses.nodes.concat(\n        fetchMoreResult.expenses.nodes\n      )\n\n      return Object.assign({}, fetchMoreResult)\n    }\n  }).then((res) => {\n    console.log('Res', res)\n  })\n\n  console.log('Count', expenses.length)\n\n  expenses = orderBy(expenses, (item) => item.createdAt)\n\n  expenses.map((item) => {\n    // eslint-disable-next-line new-cap\n    const month = new moment(item.createdAt).format('MM/YYYY')\n\n    let monthKey = periods.findIndex((i) => i === month)\n\n    if (monthKey === -1) {\n      monthKey = periods.push(month)\n    }\n\n    let catKey = cats.findIndex((i) => i.label === item.tags[0])\n\n    if (catKey === -1) {\n      if (typeof item.tags[0] !== 'undefined') {\n        catKey = cats.push({\n          label: item.tags[0],\n          data: [],\n          backgroundColor: null,\n          borderColor: null,\n          borderWidth: 1,\n          stack: 'default'\n        })\n\n        catKey = catKey - 1\n\n        cats[catKey].backgroundColor = generateRainbow(12, catKey + 1)\n        cats[catKey].borderColor = generateRainbow(12, catKey + 1)\n      }\n    }\n\n    if (typeof cats[catKey] !== 'undefined') {\n      if (typeof cats[catKey].data[monthKey] === 'undefined') {\n        cats[catKey].data[monthKey] = 0\n      }\n\n      cats[catKey].data[monthKey] += item.amount / 100\n    }\n  })\n\n  const formattedBarData = {\n    labels: periods,\n    datasets: cats\n  }\n\n  if (!messages) {\n    messages = {}\n  }\n\n  if (!locale) {\n    locale = 'en'\n  }\n\n  return (\n    <IntlProvider locale={locale} defaultLocale='en' messages={messages}>\n      <div className={styles.title}>\n        <h1 className='header'>\n          <img className={styles.header__logo} src={account.imageUrl} alt='' />\n          {account.name}\n        </h1>\n        <div className='content'>\n          <h2>\n            <FormattedMessage\n              id='allExpensesFrom'\n              defaultMessage='All expenses from {date}'\n              values={{\n                date: moment(dateFrom, 'YYYY-MM-DD').format('DD/MM/YYYY')\n              }}\n            />\n          </h2>\n          <Bar\n            data={formattedBarData}\n            width={width}\n            height={height}\n            options={{\n              maintainAspectRatio: true\n            }}\n          />\n        </div>\n      </div>\n    </IntlProvider>\n  )\n}\n\nexport default TransparencyPage\n"],"names":["numOfSteps","step","r","g","b","h","i","f","q","toString","slice","ALL_EXPENSES","gql","TransparencyPage","slug","locale","messages","date","width","useState","height","offset","dateFrom","loading","error","data","fetchMore","useQuery","variables","account","expenses","nodes","periods","cats","length","updateQuery","prev","fetchMoreResult","concat","Object","assign","then","res","console","log","orderBy","item","createdAt","map","month","moment","format","monthKey","findIndex","push","catKey","label","tags","backgroundColor","borderColor","borderWidth","stack","generateRainbow","amount","formattedBarData","labels","datasets","styles","title","header__logo","imageUrl","name","maintainAspectRatio"],"mappings":"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"}